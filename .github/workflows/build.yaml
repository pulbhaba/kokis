name: Build and Test Extension

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Checkout Extension Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Webview Repo
        uses: actions/checkout@v4
        with:
          repository: pulbhaba/kokis-webview
          path: kokis-webview
          ref: main
          fetch-depth: 0

      - name: Install Webview Dependencies & Build
        run: |
          cd kokis-webview
          npm install
          npm run build
          cd ..

      - name: Install Extension Dependencies
        run: npm install

      - name: Build Extension
        run: npm run build

      - name: Install VSCE
        run: npm install -g vsce

      - name: Package Extension
        run: |
          npm run installable
          ls dist/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: kokis-*.vsix
          retention-days: 2

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download VSIX from Build
        uses: actions/download-artifact@v4
        with:
          name: vsix-package

      - name: Install semantic-release globally
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/npm

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Create release tag
        run: |
          git tag ${{ env.version }}
          git push origin ${{ env.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: "Release ${{ env.version }}"
          files: kokis-*.vsix